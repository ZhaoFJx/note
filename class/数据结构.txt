线性表
    线性表：是n个数据元素（节点，表元素）组成的有限序列
    顺序表
        必须是连续存储，中间不能有空
        初始化
            	L = (SqList*)malloc(sizeof(SqList));
	            L->length = 0;
        输出
            printf("%d %s %s", i + 1, L->data[i].name, L->data[i].tel);
    单链表
        逻辑次序和物理次序不一定相同
        元素之间的逻辑关系用指针表示
        

栈

队列
    队列的基本概念
        队尾（rear)-允许插入的一段
        对头(front)-允许删除的一端

    顺序队列的类型定义
            #define maxsize 5
            typedef struct //定义结构体类型
            {
                ElemType data[MaxSize];
                int front,rear; //队首和队尾指针
            }SqQueue; //顺序队列

        初始化队列
            void InitQueue(SqQueue *&q)
            {
                q = (SqQueue *)malloc(sizeof(SqQueue));
                q->front = q->rear = -1;
            }

        入队列
            q->data[++q->rear] = e;

        出队列
            e = q->data[++q->front];

    循环队列
        入队
            q->rear = (q->rear + 1)%MaxSize;
            q->data[q->rear] = e;

        出队
            q->front = (q->front + 1)%MaxSize;
            e = q->data[q->front];

        队空：q->rear == q->front;
        队满: q->front ==(q->rear+1)%MaxSize;

    链队列结构定义
        typedef struct qnode
        {
            ElemType data;
            struct qnode *next;
        }QNode;  //数据节点类型

        typedef struct
        {
            QNode *front;
            QNode *rear;
        }LiQueue; //链队节点类型

树和二叉树
    树的定义：
        仅有一个根结点，结点间有明显的层次结构关系
    一般树的遍历：
        树的遍历运算是值按某种方式访问树中的每一个节点且每一个节点只被访问一次
    二叉树
        具有n个结点的二叉链表中，有n+1个空指针
        

查找

排序