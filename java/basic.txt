java严格区分大小写
使用public class 类名称 声明一个类时，类名称必须与文件名称一致。
在一个java文件中可以有多个class类的定义，但时只能有一个public class定义
/*
    多行注释的方法
*/
java中的包、类、方法、参数和变量的名字可由任意顺序的大小写字母、数字、下划线和美元符号、组成，但是
标识符不能以数字开头
应用数据类型：类 class 接口 interface 数组
int max = Integer.MAX_VALUE
常用的转义字符：
\f换页  \t制表  \n换行
当一个变量被声明在类下面，叫做字段、属性、成员变量、field
定义在方法上的叫参数
声明在方法内部额叫局部变量
修饰符：
修饰符用来定义类、方法或者变量，通常放在语句的最前端。
1.访问修饰符：
    4种不同的访问权限：
        default
        private:在同一类内可见，能修饰类
        声明为私有访问类型的变量只能通过类中公共的 getter 方法被外部类访问。
        父类中声明为 private 的方法，不能够被继承。
        public:父类中声明为 public 的方法在子类中也必须为 public。
        protected:对同一包内的类和所有子类可见。不能修饰类
        如果我们只想让该方法对其所在类的子类可见，则将该方法声明为 protected。
        父类中声明为 protected 的方法在子类中要么声明为 protected，要么声明为 public，不能声明为 private。
2.非访问修饰符：
static修饰符：
    1.静态变量：静态变量只有一份拷贝，也被称为类变量，局部变量不能被声明为static变量。
    2.静态方法：
final修饰符
    final变量
        变量一旦赋值后，不能被重新赋值
    final方法
        父类中的 final 方法可以被子类继承，但是不能被子类重写。
        声明 final 方法的主要目的是防止该方法的内容被修改。
        public final void name(){
            //方法名
        }
    final类
        final 类不能被继承，没有类能够继承 final 类的任何特性。
        public final class Test{
            //类体
        }
abstract修饰符
    抽象类
        抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。
        一个类不能同时被 abstract 和 final 修饰
    抽象方法
    




mooc
函数必须放在类的范围内
在一个类中，函数名称可以相同，既overload(重载),但参数必须有所不同
构造函数的名称必须和类名一样，且没有返回值
jvm会自动回收内存
类的成员属性是私有的private
每个java类都必须有构造函数
一个完整的类：所有的方法都有实现
类可以没有方法，但有方法就肯定要有实现，
一个完整的类才可以被实例化，被new出来
抽象类关键字abstract声明
接口interface

变量支持互相转化，如 int a  = (int)3.5;
有继承关系额类可以相互转型，子类可以转换成父类
Human obj1 = new Man();    //Man 转型成Human
多态的作用：
    以统一的接口来操纵某一类中不同的对象的动态行为
    对象之间的解耦
