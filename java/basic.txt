基礎
    java严格区分大小写
    使用public class 类名称 声明一个类时，类名称必须与文件名称一致。
    在一个java文件中可以有多个class类的定义，但时只能有一个public class定义
    /*
        多行注释的方法
    */
    java中的包、类、方法、参数和变量的名字可由任意顺序的大小写字母、数字、下划线和美元符号、组成，但是
    标识符不能以数字开头
    应用数据类型：类 class 接口 interface 数组
    int max = Integer.MAX_VALUE
    常用的转义字符：
    \f换页  \t制表  \n换行
    当一个变量被声明在类下面，叫做字段、属性、成员变量、field
    定义在方法上的叫参数
    声明在方法内部额叫局部变量
    修饰符：
    修饰符用来定义类、方法或者变量，通常放在语句的最前端。

访问修饰符：
    4种不同的访问权限：
        default
        private:在同一类内可见，能修饰类
        声明为私有访问类型的变量只能通过类中公共的 getter 方法被外部类访问。
        父类中声明为 private 的方法，不能够被继承。
        public:父类中声明为 public 的方法在子类中也必须为 public。
        protected:对同一包内的类和所有子类可见。不能修饰类
        如果我们只想让该方法对其所在类的子类可见，则将该方法声明为 protected。
        父类中声明为 protected 的方法在子类中要么声明为 protected，要么声明为 public，不能声明为 private。

    非访问修饰符：

static修饰符：
    1.静态变量：静态变量只有一份拷贝，也被称为类变量，局部变量不能被声明为static变量。
    2.静态方法：
    属于整个类所有，不是对象

final修饰符
    final变量
        变量一旦赋值后，不能被重新赋值
    final方法
        父类中的 final 方法可以被子类继承，但是不能被子类重写。
        声明 final 方法的主要目的是防止该方法的内容被修改。
        public final void name(){
            //方法名
        }
    final类
        final 类不能被继承，没有类能够继承 final 类的任何特性。
        public final class Test{
            //类体
        }

abstract修饰符
    抽象类
        抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。
        一个类不能同时被 abstract 和 final 修饰
    抽象方法
    
mooc
    函数必须放在类的范围内
    在一个类中，函数名称可以相同，既overload(重载),但参数必须有所不同
    构造函数的名称必须和类名一样，且没有返回值
    jvm会自动回收内存
    类的成员属性是私有的private
    每个java类都必须有构造函数
    一个完整的类：所有的方法都有实现
    类可以没有方法，但有方法就肯定要有实现，
    一个完整的类才可以被实例化，被new出来
    抽象类关键字abstract声明
    接口interface

    变量支持互相转化，如 int a  = (int)3.5;
    有继承关系额类可以相互转型，子类可以转换成父类
    Human obj1 = new Man();    //Man 转型成Human
    多态的作用：
        以统一的接口来操纵某一类中不同的对象的动态行为
        对象之间的解耦
    javadoc   提取文档注释内容，生成文档

编码规范
    类名必须与文件名相同

容量单位
    bit，简写b，最小单位
    byte 简写B  1B=8b
    kb  = 1024B
    1pb=1024TB
    1EB=1024TB 

字符集
    将字符转换为二进制，编码
    将二进制转换为字符，解码
    unicode  万国码
        utf-8

变量和数据类型
    变量
        骆驼式命名发
    常用数据类型

位运算符
    &
    |
    ~
    ^
    >>
    <<

选择结构

面向对象
    对象的初始化顺序
        构造方法与类名相同
        String name = "张三";       //实例属性
        static String hobby = "吃饭";       //静态属性
        public void a(){
            System.out.println(""实例方法。。。。");
        }

        public static void b(){
            System.out.println("静态方法。。。。");
        }

        public User(){
            System.out.println("构造方法。。。。。");
        }

        {
            System.out.println("代码块");
        }

        static{
            System.out.println("静态代码块");
        }

    类加载的时机
        1.创建类的对象
        2.调用类的静态属性或静态方法
        3.执行main方法时，main方法所在的类会被加载
        4，通过反射调用类  class.forName("包名.类名")
    
    步骤
        1.对象所在的类被加载
            执行静态代码块和静态属性（根据定义的顺序，从上往下执行）
                静态变量在类加载时初始化，且在内存中非陪一块空间
                静态代码块在类加载时执行，且只执行一次（类只会被加载一次）
                静态代码快中不能初始化实例变量，只能初始化静态变量
        2.对象被创建
            执行实例属性和代码块
            执行构造方法
        静态代码块->代码块->构造方法

    面向对象的三大特征
        封装
            将类的属性封装在中，不允许在类的外部直接访问，保护数据安全，时内容可控
            只能通过被授权的方法才能对数据进行访问
            类的基本原则就是封装
        步骤
            1.将属性私有化
                使用private修饰属性
            2.提供对外访问的方法，用于赋值、取值
                使用public修饰方法
                方法命名规范：
                    赋值：以set开头，后面跟上属性名，如setAge，成为setter方法（属性名首字母大写）
                    取值：以get开头，如getArry
                        如果是boolean，也可以是isXxx
    
        继承
            可以让一个类继承自另一个类，此时改类会继承另一个类中的属性和方法
            继承而得到的类称为子类，被继承的类称为父类（超类/基类）
            继承是一种 is a的关系，如：cat is a animal
            语法
                class 子类 extend 父类{
                    /*实现代码的复用：将多个子类中相同的属性和方法放到父类中
                    功能扩展
                }         
            父类的构造方法子类无法继承
                构造方法必须与类名一样
            构造方法的调用
                创建子类对象时默认会自动调用父类无参的构造方法（此时必须要保证父类中有无参构造，否则会报错）
                从子类开始，逐层往上调用父类的构造方法，知道obkect类，然后再层层返回到子类中，执行后续代码
                创建子类对象时必须会调用父类的构造方法
            super关键字
                表示父类对象的引用，只能在子类中使用
                super()调用父类的构造方法，必须位于第一行
                this()和super()都只能放在第一行，所以不能同时使用
                可以使用super.调用父类中的属性和方法
            方法的重写
                子类中的方法，与父类中的方法同名，参数列表，返回值一样，称为override
                用来重新定义子类的行为，解决父类和子类的差异性

        多态
            具有表现多种形态的能力
            特性
                通过父类引用变量调用的方法是子类重写后的方法

数组
    数据类型[] 数组名称

javaweb
    小工具
        